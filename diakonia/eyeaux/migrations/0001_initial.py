# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-03 16:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NHSBTFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=200)),
                ('extract_date', models.DateField()),
                ('ingest_date', models.DateField(default=django.utils.timezone.now)),
            ],
            options={
                'verbose_name': 'NHSBT Ingest File',
                'verbose_name_plural': 'NHSBT Ingest Files',
            },
        ),
        migrations.CreateModel(
            name='NHSBTLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_fields', models.TextField(blank=True)),
                ('file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eyeaux.NHSBTFile')),
            ],
            options={
                'verbose_name': 'NHSBT Ingest Log',
                'verbose_name_plural': 'NHSBT Ingest Logs',
            },
        ),
        migrations.CreateModel(
            name='NHSBTRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recip_forename', models.CharField(blank=True, help_text='Recipient Forename', max_length=50, verbose_name='RECIP_FORENAME')),
                ('recip_surname', models.CharField(blank=True, help_text='Recipient Surname', max_length=50, verbose_name='RECIP_SURNAME')),
                ('rdob', models.DateField(blank=True, help_text='Recipient date of birth', null=True, verbose_name='RDOB')),
                ('rnhs_no', models.CharField(blank=True, help_text='Recipient NHS Number', max_length=12, verbose_name='RNHS_NO')),
                ('rpostcode', models.CharField(blank=True, help_text='Recipient Postcode', max_length=10, verbose_name='RPOSTCODE')),
                ('recip_residence', models.CharField(blank=True, help_text='Recipient country of residence', max_length=20, verbose_name='recip_residence')),
                ('rsex', models.CharField(blank=True, help_text='Recipient gender', max_length=10, verbose_name='RSEX')),
                ('rethnic', models.CharField(blank=True, help_text='Recipient ethnicity', max_length=20, verbose_name='RETHNIC')),
                ('rbg', models.CharField(blank=True, help_text='Recipient blood group', max_length=3, verbose_name='RBG')),
                ('rrhesus', models.CharField(blank=True, help_text='Recipient rhesus blood group', max_length=20, verbose_name='RRHESUS')),
                ('recip_id', models.CharField(db_index=True, help_text='NHSBT recipient identification number', max_length=10, verbose_name='RECIP_ID')),
                ('rdod', models.DateField(blank=True, help_text='recipient date of death', null=True, verbose_name='RDOD')),
                ('donor_forename', models.CharField(blank=True, help_text='donor forename', max_length=50, verbose_name='DONOR_FORENAME')),
                ('donor_surname', models.CharField(blank=True, help_text='donor surname', max_length=50, verbose_name='DONOR_SURNAME')),
                ('ddob', models.DateField(blank=True, help_text='donor date of birth', null=True, verbose_name='DDOB')),
                ('dnhs_no', models.CharField(blank=True, help_text='donor NHS Number', max_length=12, verbose_name='DNHS_NO')),
                ('donor_postcode', models.CharField(blank=True, help_text='Donor postcode', max_length=10, verbose_name='DONOR_POSTCODE')),
                ('dresidence', models.CharField(blank=True, help_text='Donor country of residence', max_length=20, verbose_name='DRESIDENCE')),
                ('dsex', models.CharField(blank=True, help_text='Donor gender', max_length=10, verbose_name='DSEX')),
                ('dethnic', models.CharField(blank=True, help_text='Donor ethnicity', max_length=20, verbose_name='DETHNIC')),
                ('dbg', models.CharField(blank=True, help_text='Donor blood group', max_length=3, verbose_name='DBG')),
                ('drhesus', models.CharField(blank=True, help_text='Donor rhesus blood group', max_length=20, verbose_name='DRHESUS')),
                ('donor_id', models.CharField(db_index=True, help_text='NHSBT donor identification number', max_length=10, verbose_name='DONOR_ID')),
                ('dage', models.CharField(blank=True, help_text='Donor age', max_length=5, verbose_name='DAGE')),
                ('dcod', models.CharField(blank=True, help_text='Donor cause of death', max_length=100, verbose_name='DCOD')),
                ('dhtlv', models.CharField(blank=True, help_text='Does the donor have HTLV', max_length=20, verbose_name='DHTLV')),
                ('dsyphilis', models.CharField(blank=True, help_text='Does the donor have syphilis', max_length=20, verbose_name='DSYPHILIS')),
                ('dpast_alcohol_abuse', models.CharField(blank=True, help_text='past history of alcohol abuse in the donor', max_length=20, verbose_name='DPAST_ALCOHOL_ABUSE')),
                ('dpast_cardio_disease', models.CharField(blank=True, help_text='past history of cardio disease in the donor', max_length=20, verbose_name='DPAST_CARDIO_DISEASE')),
                ('dpast_diabetes', models.CharField(blank=True, help_text='past history of diabetes in the donor', max_length=20, verbose_name='DPAST_DIABETES')),
                ('dpast_drug_abuse', models.CharField(blank=True, help_text='past history of drug abuse in the donor', max_length=20, verbose_name='DPAST_DRUG_ABUSE')),
                ('dpast_hypertension', models.CharField(blank=True, help_text='past history of hypertension in the donor', max_length=20, verbose_name='DPAST_HYPERTENSION')),
                ('dpast_liver_disease', models.CharField(blank=True, help_text='past history of liver disease in the donor', max_length=20, verbose_name='DPAST_LIVER_DISEASE')),
                ('dpast_other', models.CharField(blank=True, help_text='any other past history in the donor', max_length=20, verbose_name='DPAST_OTHER')),
                ('dpast_other_details', models.TextField(blank=True, help_text='details of other past histories', verbose_name='DPAST_OTHER_DETAILS')),
                ('dpast_smoker', models.CharField(blank=True, help_text='past history of smoking in the donor', max_length=20, verbose_name='DPAST_SMOKER')),
                ('dpast_smoker_amount', models.CharField(blank=True, help_text='past smoking amount', max_length=10, verbose_name='dpast_smoker_amount')),
                ('dpast_tumour', models.CharField(blank=True, help_text='past history of tumour in the donor', max_length=20, verbose_name='DPAST_TUMOUR')),
                ('dpast_uti', models.CharField(blank=True, help_text='past history of UTI in the donor', max_length=20, verbose_name='DPAST_UTI')),
                ('dpast_family_diabetes', models.CharField(blank=True, help_text='past history of diabetes in the donor family', max_length=20, verbose_name='DPAST_FAMILY_DIABETES')),
                ('dpast_family_diabetes_type', models.CharField(blank=True, help_text='what type of family diabetes', max_length=20, verbose_name='DPAST_FAMILY_DIABETES_TYPE')),
                ('dial_at_tx', models.CharField(blank=True, help_text='was the recipient on dialysis at transplant', max_length=20, verbose_name='DIAL_AT_TX')),
                ('dial_at_tx_type', models.CharField(blank=True, help_text='what type of dialysis was the recipient on', max_length=20, verbose_name='DIAL_AT_TX_TYPE')),
                ('dial_start_date', models.DateTimeField(blank=True, help_text='what date did the recipient start dialysis', null=True, verbose_name='DIAL_START_DATE')),
                ('dial_end_date', models.DateTimeField(blank=True, help_text='what date did the recipient stop dialysis', null=True, verbose_name='DIAL_END_DATE')),
                ('no_prev_tx', models.CharField(blank=True, help_text='had the recipient had any previous transplants', max_length=5, verbose_name='NO_PREV_TX')),
                ('tx_date', models.DateField(blank=True, help_text='date of recipients transplant', null=True, verbose_name='TX_DATE')),
                ('rec_unit', models.CharField(blank=True, help_text='Transplant unit', max_length=50, verbose_name='REC_UNIT')),
                ('rhosp_no', models.CharField(blank=True, help_text='recipients hospital number', max_length=30, verbose_name='RHOSP_NO')),
                ('dtype', models.CharField(blank=True, help_text='donor type', max_length=50, verbose_name='DTYPE')),
                ('rltnship', models.CharField(blank=True, help_text='relationship status of living donor transplants', max_length=50, verbose_name='RLTNSHIP')),
                ('relationship_details', models.CharField(blank=True, help_text='details of the relationship between recipient and donor', max_length=50, verbose_name='RELATIONSHIP_DETAILS')),
                ('laterality', models.CharField(blank=True, help_text='No description', max_length=30, verbose_name='LATERALITY')),
                ('tx_type', models.CharField(blank=True, help_text='Type of transplant performed', max_length=30, verbose_name='TX_TYPE')),
                ('local', models.CharField(blank=True, help_text='was the transplant performed in the same centre as the donor', max_length=100, verbose_name='LOCAL')),
                ('faildate', models.DateField(blank=True, help_text='what date did the transplant fail', null=True, verbose_name='FAILDATE')),
                ('aitx_type', models.CharField(blank=True, help_text='what type of antibody incompatible transplant was performed', max_length=20, verbose_name='AITX_TYPE')),
                ('cit_hrs', models.CharField(blank=True, help_text='cold ischaemia time in hours', max_length=20, verbose_name='CIT_HRS')),
                ('fwit', models.CharField(blank=True, help_text='functional warm ischaemia time in minutes', max_length=20, null=True, verbose_name='fWIT')),
                ('swit', models.CharField(blank=True, help_text='standard warm ischaemia time in minutes', max_length=20, null=True, verbose_name='sWIT')),
                ('amm', models.CharField(blank=True, help_text='how many mismatches at the A locus', max_length=20, null=True, verbose_name='AMM')),
                ('bmm', models.CharField(blank=True, help_text='how many mismatches at the B locus', max_length=20, null=True, verbose_name='BMM')),
                ('drmm', models.CharField(blank=True, help_text='how many mismatches at the DR locus', max_length=20, null=True, verbose_name='DRMM')),
                ('recip_hla_sample_date', models.DateTimeField(blank=True, help_text='when was the last recipient HLA sample taken', null=True, verbose_name='RECIP_HLA_SAMPLE_DATE')),
                ('recip_first_a_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_A_Broad')),
                ('recip_first_a_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_A_Split')),
                ('recip_second_a_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_A_Broad')),
                ('recip_second_a_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_A_Split')),
                ('recip_first_b_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_B_Broad')),
                ('recip_first_b_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_B_Split')),
                ('recip_second_b_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_B_Broad')),
                ('recip_second_b_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_B_Split')),
                ('recip_first_c_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_C_Broad')),
                ('recip_first_c_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_C_Split')),
                ('recip_second_c_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_C_Broad')),
                ('recip_second_c_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_C_Split')),
                ('recip_first_dr_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DR_Broad')),
                ('recip_first_dr_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DR_Split')),
                ('recip_second_dr_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DR_Broad')),
                ('recip_second_dr_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DR_Split')),
                ('recip_first_dp_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DP_Broad')),
                ('recip_first_dp_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DP_Split')),
                ('recip_second_dp_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DP_Broad')),
                ('recip_second_dp_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DP_Split')),
                ('recip_first_dq_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DQ_Broad')),
                ('recip_first_dq_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_First_DQ_Split')),
                ('recip_second_dq_broad', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DQ_Broad')),
                ('recip_second_dq_split', models.CharField(blank=True, help_text='Recipient HLA type', max_length=10, verbose_name='Recip_Second_DQ_Split')),
                ('donor_hla_sample_date', models.DateTimeField(blank=True, help_text='When was the last donor HLA sample taken', null=True, verbose_name='DONOR_HLA_SAMPLE_DATE')),
                ('donor_first_a_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_A_Broad')),
                ('donor_first_a_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_A_Split')),
                ('donor_second_a_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_A_Broad')),
                ('donor_second_a_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_A_Split')),
                ('donor_first_b_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_B_Broad')),
                ('donor_first_b_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_B_Split')),
                ('donor_second_b_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_B_Broad')),
                ('donor_second_b_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_B_Split')),
                ('donor_first_c_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_C_Broad')),
                ('donor_first_c_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_C_Split')),
                ('donor_second_c_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_C_Broad')),
                ('donor_second_c_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_C_Split')),
                ('donor_first_dr_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DR_Broad')),
                ('donor_first_dr_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DR_Split')),
                ('donor_second_dr_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DR_Broad')),
                ('donor_second_dr_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DR_Split')),
                ('donor_first_dp_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DP_Broad')),
                ('donor_first_dp_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DP_Split')),
                ('donor_second_dp_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DP_Broad')),
                ('donor_second_dp_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DP_Split')),
                ('donor_first_dq_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DQ_Broad')),
                ('donor_first_dq_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_First_DQ_Split')),
                ('donor_second_dq_broad', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DQ_Broad')),
                ('donor_second_dq_split', models.CharField(blank=True, help_text='Donor HLA type', max_length=10, verbose_name='Donor_Second_DQ_Split')),
                ('cyclosporin', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='CYCLOSPORIN')),
                ('mycophenolate_mofetil', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='MYCOPHENOLATE_MOFETIL')),
                ('other_immuno_drug', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='OTHER_IMMUNO_DRUG')),
                ('immuno_text', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=100, verbose_name='IMMUNO_TEXT')),
                ('prednisolone_prednisone', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='PREDNISOLONE_PREDNISONE')),
                ('tacrolimus', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='TACROLIMUS')),
                ('azathioprine', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='AZATHIOPRINE')),
                ('alg_atg', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='ALG_ATG')),
                ('okt3', models.CharField(blank=True, help_text='Immunosuppresion and induction therapy', max_length=10, verbose_name='OKT3')),
                ('rcmv', models.CharField(blank=True, help_text='Recipient CMV status', max_length=20, verbose_name='RCMV')),
                ('rhiv', models.CharField(blank=True, help_text='Recipient HIV status', max_length=20, verbose_name='RHIV')),
                ('debv', models.CharField(blank=True, help_text='Donor EBV status', max_length=20, verbose_name='DEBV')),
                ('dtoxo', models.CharField(blank=True, help_text='Donor TOXO status', max_length=20, verbose_name='DTOXO')),
                ('dhiv', models.CharField(blank=True, help_text='Donor HIV status', max_length=20, verbose_name='DHIV')),
                ('dgf', models.CharField(blank=True, help_text='Did the recipient have delayed graft function', max_length=30, verbose_name='DGF')),
                ('resume_dialysis_date', models.DateTimeField(blank=True, help_text='when did the recipient resume dialysis post transplant', null=True, verbose_name='RESUME_DIALYSIS_DATE')),
                ('rheight', models.CharField(blank=True, help_text='recipient height', max_length=10, verbose_name='RHEIGHT')),
                ('rweight', models.CharField(blank=True, help_text='recipient weight', max_length=20, verbose_name='RWEIGHT')),
                ('serum3', models.CharField(blank=True, help_text='serum creatinine at 3 months', max_length=10, verbose_name='serum3')),
                ('scdate3', models.DateField(blank=True, help_text='date of serum creatinine at 3 months', null=True, verbose_name='scdate3')),
                ('serum12', models.CharField(blank=True, help_text='serum creatinine at 12 months', max_length=10, verbose_name='serum12')),
                ('scdate12', models.DateField(blank=True, help_text='date of serum creatinine at 12 months', null=True, verbose_name='scdate12')),
                ('serum24', models.CharField(blank=True, help_text='serum creatinine at 24 months', max_length=10, verbose_name='serum24')),
                ('scdate24', models.DateField(blank=True, help_text='date of serum creatinine at 24 months', null=True, verbose_name='scdate24')),
                ('serum36', models.CharField(blank=True, help_text='serum creatinine at 36 months', max_length=10, verbose_name='serum36')),
                ('scdate36', models.DateField(blank=True, help_text='date of serum creatinine at 36 months', null=True, verbose_name='scdate36')),
                ('serum48', models.CharField(blank=True, help_text='serum creatinine at 48 months', max_length=10, verbose_name='serum48')),
                ('scdate48', models.DateField(blank=True, help_text='date of serum creatinine at 48 months', null=True, verbose_name='scdate48')),
                ('serum60', models.CharField(blank=True, help_text='serum creatinine at 60 months', max_length=10, verbose_name='serum60')),
                ('scdate60', models.DateField(blank=True, help_text='date of serum creatinine at 60 months', null=True, verbose_name='scdate60')),
                ('rbhv', models.CharField(blank=True, help_text='recipient BHV status', max_length=10, verbose_name='RBHV')),
                ('rhcv', models.CharField(blank=True, help_text='Recipient HCV status', max_length=10, verbose_name='RHCV')),
                ('dhbcab', models.CharField(blank=True, help_text='donor Hep B core antigen status', max_length=20, verbose_name='DHBCAB')),
                ('dhbsag', models.CharField(blank=True, help_text='donor hep B surface antigen status', max_length=20, verbose_name='DHBSAG')),
                ('dhcv', models.CharField(blank=True, help_text='Donor HCV status', max_length=20, verbose_name='DHCV')),
                ('egfr3', models.CharField(blank=True, help_text='recipient eGFR at 3 months', max_length=10, verbose_name='eGFR3')),
                ('egfr12', models.CharField(blank=True, help_text='recipient eGFR at 12 months', max_length=10, verbose_name='eGFR12')),
                ('egfr24', models.CharField(blank=True, help_text='recipient eGFR at 24 months', max_length=10, verbose_name='eGFR24')),
                ('egfr36', models.CharField(blank=True, help_text='recipient eGFR at 36 months', max_length=10, verbose_name='eGFR36')),
                ('egfr48', models.CharField(blank=True, help_text='recipient eGFR at 48 months', max_length=10, verbose_name='eGFR48')),
                ('egfr60', models.CharField(blank=True, help_text='recipient eGFR at 60 months', max_length=10, verbose_name='eGFR60')),
            ],
            options={
                'verbose_name': 'NHSBT Record Row',
                'verbose_name_plural': 'NHSBT Record Rows',
            },
        ),
        migrations.AddField(
            model_name='nhsbtlog',
            name='record',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='eyeaux.NHSBTRecord'),
        ),
    ]
